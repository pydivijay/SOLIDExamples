<svg viewBox="0 0 1200 760" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="bgIspOk" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#e6fffa"/>
      <stop offset="100%" stop-color="#f0fff4"/>
    </linearGradient>
    <linearGradient id="iface" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#dbeafe"/>
      <stop offset="100%" stop-color="#bfdbfe"/>
    </linearGradient>
    <linearGradient id="service" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#dcfce7"/>
      <stop offset="100%" stop-color="#bbf7d0"/>
    </linearGradient>
    <linearGradient id="controller" x1="0" y1="0" x2="1" y2="1">
      <stop offset="0%" stop-color="#fde68a"/>
      <stop offset="100%" stop-color="#fcd34d"/>
    </linearGradient>
    <marker id="arrow" markerWidth="10" markerHeight="8" refX="9" refY="4" orient="auto">
      <path d="M0,0 L10,4 L0,8 z" fill="#334155"/>
    </marker>
    <style>
      .card{rx:16; ry:16; stroke:#334155; stroke-width:2; fill:white;}
      .title{font: 700 22px/1.2 ui-sans-serif,system-ui,Segoe UI,Roboto; fill:#0f172a;}
      .label{font: 600 16px/1.3 ui-sans-serif,system-ui,Segoe UI,Roboto; fill:#0f172a;}
      .sub{font: 13px ui-sans-serif,system-ui,Segoe UI,Roboto; fill:#334155;}
      .caption{font: 12px ui-sans-serif,system-ui,Segoe UI,Roboto; fill:#475569;}
    </style>
  </defs>

  <rect x="0" y="0" width="1200" height="760" fill="url(#bgIspOk)"/>
  <text x="32" y="44" class="title">Interface Segregation Principle â€” Compliant</text>
  <text x="32" y="68" class="sub">Controllers and services depend only on the small interfaces they actually use.</text>

  <!-- Controllers -->
  <rect x="40" y="120" width="320" height="220" class="card" fill="url(#controller)"/>
  <text x="60" y="150" class="label">Controllers</text>
  <text x="60" y="176" class="sub">- EmailNotificationController</text>
  <text x="60" y="200" class="sub">- SmsNotificationController</text>
  <text x="60" y="224" class="sub">- PushNotificationController</text>
  <text x="60" y="262" class="caption">Each controller depends on a single interface.</text>

  <!-- Interfaces -->
  <rect x="450" y="120" width="280" height="220" class="card" fill="url(#iface)"/>
  <text x="470" y="150" class="label">Segregated Interfaces</text>
  <text x="470" y="178" class="sub">IEmailNotification</text>
  <text x="470" y="202" class="sub">ISmsNotification</text>
  <text x="470" y="226" class="sub">IPushNotification</text>
  <text x="470" y="262" class="caption">Small, role-specific abstractions.</text>

  <!-- Services -->
  <rect x="840" y="120" width="320" height="220" class="card" fill="url(#service)"/>
  <text x="860" y="150" class="label">Implementations</text>
  <text x="860" y="178" class="sub">EmailNotificationService : IEmailNotification</text>
  <text x="860" y="202" class="sub">SmsNotificationService : ISmsNotification</text>
  <text x="860" y="226" class="sub">PushNotificationService : IPushNotification</text>
  <text x="860" y="262" class="caption">Classes implement only what they need.</text>

  <!-- Arrows (Controllers -> Interfaces) -->
  <line x1="360" y1="180" x2="450" y2="180" stroke="#334155" stroke-width="2.5" marker-end="url(#arrow)"/>
  <line x1="360" y1="210" x2="450" y2="210" stroke="#334155" stroke-width="2.5" marker-end="url(#arrow)"/>
  <line x1="360" y1="240" x2="450" y2="240" stroke="#334155" stroke-width="2.5" marker-end="url(#arrow)"/>
  <text x="380" y="168" class="caption">depends on</text>

  <!-- Arrows (Interfaces -> Services) -->
  <line x1="730" y1="180" x2="840" y2="180" stroke="#334155" stroke-width="2.5" marker-end="url(#arrow)"/>
  <line x1="730" y1="210" x2="840" y2="210" stroke="#334155" stroke-width="2.5" marker-end="url(#arrow)"/>
  <line x1="730" y1="240" x2="840" y2="240" stroke="#334155" stroke-width="2.5" marker-end="url(#arrow)"/>
  <text x="750" y="168" class="caption">implemented by</text>

  <!-- Steps -->
  <rect x="40" y="380" width="1120" height="300" class="card" fill="#ffffff"/>
  <text x="60" y="410" class="label">Integration Steps (ISP)</text>
  <text x="60" y="438" class="sub">1. Add models: EmailRequest/Result, SmsRequest/Result, PushRequest/Result</text>
  <text x="60" y="462" class="sub">2. Create segregated interfaces: IEmailNotification, ISmsNotification, IPushNotification</text>
  <text x="60" y="486" class="sub">3. Implement services that match each interface only</text>
  <text x="60" y="510" class="sub">4. Wire controllers to the specific interface they need</text>
  <text x="60" y="534" class="sub">5. Register DI per interface -> implementation mapping</text>
  <text x="60" y="570" class="caption">Outcome: No NotImplementedException, smaller surface area, better testability.</text>
</svg>
